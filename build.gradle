apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

repositories {
    maven { url 'https://artifactory.ida.digital.cabinet-office.gov.uk/artifactory/whitelisted-repos' }
}

project.ext {
    openSamlVersion = '3.3.0'
}

dependencies {
    compile(
        'io.dropwizard:dropwizard-core:1.1.2',
        'org.json:json:20170516',
        "org.opensaml:opensaml-core:$openSamlVersion",
        "uk.gov.ida:saml-metadata-bindings:$openSamlVersion-41",
    )
    testCompile(
        'junit:junit:4.12',
        'io.dropwizard:dropwizard-testing:1.1.0',
        'org.mockito:mockito-core:2.7.22',
        "uk.gov.ida:saml-metadata-bindings-test:$openSamlVersion-41",
        "uk.gov.ida:common-test-utils:2.0.0-31",
    )
    testCompile('com.github.tomakehurst:wiremock:2.5.1'){ transitive = false }
}

// Allows us to use the private sun API for generating self signed certs in tests
compileTestJava {
    options.fork = true
    options.forkOptions.executable = 'javac'
    options.compilerArgs << "-XDignore.symbol.file"
}

sourceSets {
    acceptanceTest {
        java {
            srcDir 'src/acceptance-test/java'
        }
        resources {
            srcDir 'src/acceptance-test/resources'
        }
        compileClasspath += sourceSets.main.runtimeClasspath
        compileClasspath += sourceSets.test.runtimeClasspath
        compileClasspath += sourceSets.test.output
    }
}

distributions {
    main {
        contents {
            from {
                ['README.md', 'RELEASE_NOTES.md', 'configuration/verify-service-provider.yml']
            }
        }
    }
}

task testAcceptance(type: Test) {
    testClassesDir = sourceSets.acceptanceTest.output.classesDir
    classpath += sourceSets.acceptanceTest.runtimeClasspath
}

run {
    args = ["server", "configuration/verify-service-provider.yml"]
}

mainClassName = 'uk.gov.ida.verifyserviceprovider.VerifyServiceProviderApplication'
